'''

@author: Raymond Lehky
Thursday, March 9th, 2023

'''
# This program will roll dice of any size for the user.
# Configurable values:

max_Number_Of_Dice = 100
max_Number_Of_Dice_Sides = 100

# The program below.
import random # This lets us generate pseudo-random numbers.


def pickRollNums(): # This function takes input from the user and returns a list of these inputs.
    
    diceNum = input("How many dice would you like to roll?")
    if diceNum.isnumeric() == False or int(diceNum) <= 0:
        print("That is not a valid number of dice.\n")
        return pickRollNums() # This will recursively restart pickRollNums if the user inputs any funny values, like non-numbers or 0.
    
    if int(diceNum) > max_Number_Of_Dice:
        print(f"That is a lot of dice. Maybe try less than {max_Number_Of_Dice}.\n") # This is an 'f string'. It allows simpler concatenation.
        return pickRollNums() # This will recursively restart pickRollNums if the user inputs any value over max_Number_Of_Dice.
    
    sideNum = input("How many sides will these dice have?")
    if sideNum.isnumeric() == False or int(sideNum) <= 0:
        print("That is not a valid number of sides. Try again!\n")
        return pickRollNums() # This will recursively restart pickRollNums if the user inputs any funny values, like a non-number.
    
    if int(sideNum) > max_Number_Of_Dice_Sides:
        print(f"I don't have dice that go over {max_Number_Of_Dice_Sides} sides.\n")
        return pickRollNums() # This will recursively restart pickRollNums if the user inputs any value over max_Number_Of_Dice_Sides.
    
    return [diceNum, sideNum]


def rollDice(rollNums): # Thus function takes the list from pickRollNums as input and 'rolls the dice', putting the results in a list.
    
    diceNum = rollNums[0] # These two lines separate elements of the input list into their respective roles.
    sideNum = rollNums[1] # /\/\/\
    
    rolls = 0 # This variable will keep track of the number of dice rolled and ensure that the code stops when it had rolled enough dice.
    rollTotals = []
    
    while rolls < int(diceNum):
        rolls += 1
        rollTotals.append(random.randint(1, int(sideNum))) # Here is where we use the random library, creating a random number from 1 to the specified side number.
    
    return rollTotals


def rollResults(allRolls): # This function takes the list from rollDice as input and prints out the resulting rolls in a pleasing way.
    
    totalRoll = 0
    rollNums = ""
    for num in allRolls:
        rollNums = rollNums + str(num) + ", "
        totalRoll = totalRoll + num
    
    rollNums = rollNums[: -2] # This gets rid of the extra comma and space on the end of the rollNums string.
    
    return(f"Your rolls were: {rollNums}.\nThe total of these rolls is {totalRoll}.")


def main(): # This function calls all the other functions to run in the correct order.
    
    print("Welcome to the dice roller!\nPress Enter to start rolling dice.")
    input() # This input statement just wits for any instance of the Enter key being pressed, any value entered does nothing.
    
    while True: # This will loop the program as long as the user would like to keep rolling dice.
        
        print(rollResults(rollDice(pickRollNums()))) # Here all the other functions are called.
        
        answer = input("\nWould you Like to play again? (Y or N)\n:    ") # Here the user is prompted to play again.
        
        if answer not in ["Y", "y", "Yes", "yes"]: # If the user inputs anything other than an affirmative response, the program terminates.
            print("That sounds like a no.\n    Thank you for playing!")
            break
    

main() # This statement actually runs the main() function and starts the program.

